include /etc/nginx/modules/*.conf;
env MASTODON_WEB_CONTAINER;
env MASTODON_STREAMING_CONTAINER;

pcre_jit on;
daemon off;
error_log /dev/stdout info;

events {
  worker_connections 1024;
}

http{

  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  log_format main '$http_x_forwarded_for - $remote_user [$time_local] '
    '"$request" $status $body_bytes_sent "$http_referer" '
    '"$http_user_agent"';

  access_log "/var/log/nginx/$http_host.log" main;

  server {
    listen 8080;
    listen [::]:8080;

    set_by_lua $mastodon_web_container 'return os.getenv("MASTODON_WEB_CONTAINER")';
    set_by_lua $mastodon_streaming_container 'return os.getenv("MASTODON_STREAMING_CONTAINER")';

    resolver 127.0.0.11 valid=600s;

    keepalive_timeout    70;
    sendfile             on;
    client_max_body_size 8m;
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    add_header Strict-Transport-Security "max-age=31536000";

    location / {
      try_files $uri @proxy;
    }

    location ~ ^/(emoji|packs|system/accounts/avatars|system/media_attachments/files) {
      add_header Cache-Control "public, max-age=31536000, immutable";
      try_files $uri @proxy;
    }

    location /sw.js {
      add_header Cache-Control "public, max-age=0";
      try_files $uri @proxy;
    }

    location @proxy {
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $http_x_forwarded_for;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header Proxy "";
      proxy_pass_header Server;

      proxy_pass http://$mastodon_web_container:3000;
      proxy_buffering off;
      proxy_redirect off;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;

      tcp_nodelay on;
    }

    location /api/v1/streaming {
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $http_x_forwarded_for;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header Proxy "";

      proxy_pass http://$mastodon_streaming_container:4000;
      proxy_buffering off;
      proxy_redirect off;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      tcp_nodelay on;
    }

    error_page 500 501 502 503 504 /500.html;
  }
}
